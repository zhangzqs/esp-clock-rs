import { BootPage, BootState } from "boot/index.slint";
import { HomePage } from "home/index.slint";
import { MenuPage } from "menu/index.slint";
import { PhotoPage } from "photo/index.slint";
import { LEDPage } from "led/index.slint";
import { HomeWeatherData, HomeTimeData } from "home/index.slint";
import { ClockPage } from "clock/index.slint";
import { Page } from "common/page.slint";
import { FPSTestPage, FPSTestType } from "fpstest/index.slint";
import { ProjectorPage } from "projector/index.slint";
import { EvilApplePage } from "evilapple/index.slint";
import { MusicPage, MusicItemInfo } from "music/index.slint";
import { NetworkMoniterPage } from "network/index.slint";

export component MultiPage inherits Rectangle {
    property <Page> current-page: Page.Boot;

    // BootPage
    boot-page := BootPage {
        visible: current-page == Page.Boot;
        boot-finish => { enter-page(Page.Music); }
    }

    public function boot-page-set-state(state: BootState) {
        boot-page.set-state(state);
    }

    // HomePage
    in property <HomeTimeData> home-page-time;
    in property <HomeWeatherData> home-page-weather;
    home-page := HomePage {
        visible: current-page == Page.Home;
        time: home-page-time;
        weather: home-page-weather;
        open-menu => {
            current-page = Page.Menu;
            menu-page.enter();
        }
    }

    // ImagePage
    callback photo-page-enter();
    callback photo-page-request-next();
    callback photo-page-request-auto-play();
    callback photo-page-request-stop-auto-play();
    callback photo-page-exit();
    photo-page := PhotoPage {
        visible: current-page == Page.Photo;
        enter => { photo-page-enter(); }
        request-next => { photo-page-request-next(); }
        request-auto-play => { photo-page-request-auto-play(); }
        request-stop-auto-play => { photo-page-request-stop-auto-play(); }
        exit => {
            photo-page-exit();
            current-page = Page.Home;
        }
    }

    public function photo-page-is-auto-play-mode() -> bool{
        return photo-page.is-auto-play-mode();
    }

    led-page := LEDPage {
        visible: current-page == Page.LED;
        exit => {
            current-page = Page.Home;
        }
    }

    callback clock-page-enter();
    callback clock-page-exit();
    clock-page := ClockPage {
        visible: current-page == Page.Clock;
        enter => { clock-page-enter(); }
        exit => {
            clock-page-exit();
            current-page = Page.Home;
        }
    }

    callback fpstest-page-enter();
    callback fpstest-page-exit();
    callback fpstest-page-update-type(FPSTestType);
    fpstest-page := FPSTestPage {
        visible: current-page == Page.FPSTest;
        enter => { fpstest-page-enter(); }
        exit => {
            fpstest-page-exit();
            current-page = Page.Home;
        }
        update-type(t) => { fpstest-page-update-type(t); }
    }

    in property <string> projector-page-local-ip;
    in property <int> projector-page-local-port;
    callback projector-page-enter();
    callback projector-page-exit();
    projector-page := ProjectorPage {
        visible: current-page == Page.Projector;
        local-ip: projector-page-local-ip;
        local-port: projector-page-local-port;
        enter => { projector-page-enter(); }
        exit => {
            projector-page-exit();
            current-page = Page.Home;
        }
    }

    in property <string> evilapple-page-device-name;
    callback evilapple-page-enter();
    callback evilapple-page-exit();
    evilapple-page := EvilApplePage {
        visible: current-page == Page.EvilApple;
        device-name: evilapple-page-device-name;
        enter => { evilapple-page-enter(); }
        exit => {
            evilapple-page-exit();
            current-page = Page.Home;
        }
    }

    in property <string> music-page-note;
    in property <float> music-page-percent;
    callback music-page-play(MusicItemInfo) -> bool;
    callback music-page-enter();
    callback music-page-exit();
    music-page := MusicPage {
        visible: current-page == Page.Music;
        note: music-page-note;
        percent: music-page-percent;
        play(i) => { return music-page-play(i); }
        enter => { music-page-enter(); }
        exit => {
            music-page-exit();
            current-page = Page.Home;
        }
    }
    public function music-page-on-play-done(info: MusicItemInfo) -> bool { return music-page.on-play-done(info); }

    in property <image> network-monitor-page-plot;
    network-monitor-page := NetworkMoniterPage {
        visible: current-page == Page.Network;
        plot: network-monitor-page-plot;
    }

    menu-page := MenuPage {
        visible: current-page == Page.Menu;
        enter-selected-page(page) => { enter-page(page); }
    }

    public function enter-page(page: Page) {
        current-page = page;
        if (page == Page.Photo) { photo-page.on-enter(); }
        if (page == Page.Clock) { clock-page.on-enter(); }
        if (page == Page.FPSTest) { fpstest-page.on-enter(); }
        if (page == Page.Projector) { projector-page.on-enter(); }
        if (page == Page.Music) { music-page.on-enter(); }
    }

    public function on-one-button-click() {
        if (current-page == Page.Home) { home-page.on-one-button-click(); }
        if (current-page == Page.Menu) { menu-page.on-one-button-click(); }
        if (current-page == Page.Photo) { photo-page.on-one-button-click(); }
        if (current-page == Page.LED) { led-page.on-one-button-click(); }
        if (current-page == Page.FPSTest) { fpstest-page.on-one-button-click(); }
        if (current-page == Page.Music) { music-page.on-one-button-click(); }

    }

    public function on-one-button-double-click() {
        if (current-page == Page.Menu) { menu-page.on-one-button-double-click(); }
        if (current-page == Page.Photo) { photo-page.on-one-button-double-click(); }
        if (current-page == Page.LED) { led-page.on-one-button-double-click(); }
        if (current-page == Page.Home ) { home-page.on-one-button-double-click(); }
    }

    public function on-one-button-triple-click() {
        if (current-page == Page.LED) { led-page.on-one-button-triple-click(); }
    }

    public function on-one-button-long-pressed-holding(dur: duration) {
        if (current-page == Page.LED) { led-page.on-one-button-long-pressed-holding(dur); }
        if (current-page == Page.Photo) { photo-page.on-one-button-long-pressed-holding(dur); }
        if (current-page == Page.Clock) { clock-page.on-one-button-long-pressed-holding(dur); }
        if (current-page == Page.FPSTest) { fpstest-page.on-one-button-long-pressed-holding(dur); }
        if (current-page == Page.Projector) { projector-page.on-one-button-long-pressed-holding(dur); }
        if (current-page == Page.Music) { music-page.on-one-button-long-pressed-holding(dur); }
    }

    public function on-one-button-long-pressed-held(dur: duration) {
        
    }
}